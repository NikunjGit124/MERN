{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\nexport const HTTP_SERVICE_CALL = async (url, type, body, params) => {\n  return new Promise(async function (resolve, reject) {\n    try {\n      let response = await axios({\n        method: type,\n        url: url,\n        crossDomain: true,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: body,\n        params: params\n      });\n      if (response.status === 200 || response.status === 201) {\n        return resolve(response);\n      }\n    } catch (error) {\n      return reject(error.toJSON());\n    }\n  });\n};\n_c = HTTP_SERVICE_CALL;\nexport const gloabaltoastmessage = (message, duration, type) => {\n  if (type === 'success') {\n    toast.success(message, {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: duration\n    });\n  } else if (type === 'error') {\n    toast.error(message, {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: duration\n    });\n  } else if (type === 'warning') {\n    toast.warning(message, {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: duration\n    });\n  } else {\n    toast.info(message, {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: false\n    });\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"HTTP_SERVICE_CALL\");","map":{"version":3,"names":["axios","toast","configure","HTTP_SERVICE_CALL","url","type","body","params","Promise","resolve","reject","response","method","crossDomain","headers","data","status","error","toJSON","gloabaltoastmessage","message","duration","success","position","POSITION","TOP_RIGHT","autoClose","warning","info"],"sources":["C:/Users/Nikunj.Tiwari/Desktop/Nikunj Data/ReactJS/PageResponsive/demo/src/Components/ApiProvider/ApiProvider.jsx"],"sourcesContent":["import axios from \"axios\";\nimport {toast} from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\nexport const HTTP_SERVICE_CALL = async (url, type, body, params) => {\n  return new Promise(async function (resolve, reject) {\n    try{\n     let response =  await axios({\n        method: type,\n        url: url,\n        crossDomain: true,\n        headers: { \"Content-Type\": \"application/json\" },\n        data: body,\n        params: params,\n      });\n      if (response.status === 200 || response.status === 201) {\n        return resolve(response);\n      }\n    }catch(error){\n      return reject(error.toJSON());\n    }\n  });\n};\nexport const gloabaltoastmessage = (message,duration,type) => {\n    if(type==='success'){\n      toast.success(message, {\n      position: toast.POSITION.TOP_RIGHT, autoClose:duration\n      })\n\n    }else if(type==='error'){\n      toast.error(message, {\n      position: toast.POSITION.TOP_RIGHT, autoClose:duration\n      })\n    }else if(type==='warning'){\n      toast.warning(message, {\n      position: toast.POSITION.TOP_RIGHT, autoClose:duration\n      })\n    }else{\n      toast.info(message, {\n      position: toast.POSITION.TOP_RIGHT, autoClose:false\n      })  \n    }    \n}\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,QAAO,gBAAgB;AACpC,OAAO,uCAAuC;AAC9CA,KAAK,CAACC,SAAS,EAAE;AACjB,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,KAAK;EAClE,OAAO,IAAIC,OAAO,CAAC,gBAAgBC,OAAO,EAAEC,MAAM,EAAE;IAClD,IAAG;MACF,IAAIC,QAAQ,GAAI,MAAMX,KAAK,CAAC;QACzBY,MAAM,EAAEP,IAAI;QACZD,GAAG,EAAEA,GAAG;QACRS,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAET,IAAI;QACVC,MAAM,EAAEA;MACV,CAAC,CAAC;MACF,IAAII,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAIL,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QACtD,OAAOP,OAAO,CAACE,QAAQ,CAAC;MAC1B;IACF,CAAC,QAAMM,KAAK,EAAC;MACX,OAAOP,MAAM,CAACO,KAAK,CAACC,MAAM,EAAE,CAAC;IAC/B;EACF,CAAC,CAAC;AACJ,CAAC;AAAC,KAlBWf,iBAAiB;AAmB9B,OAAO,MAAMgB,mBAAmB,GAAG,CAACC,OAAO,EAACC,QAAQ,EAAChB,IAAI,KAAK;EAC1D,IAAGA,IAAI,KAAG,SAAS,EAAC;IAClBJ,KAAK,CAACqB,OAAO,CAACF,OAAO,EAAE;MACvBG,QAAQ,EAAEtB,KAAK,CAACuB,QAAQ,CAACC,SAAS;MAAEC,SAAS,EAACL;IAC9C,CAAC,CAAC;EAEJ,CAAC,MAAK,IAAGhB,IAAI,KAAG,OAAO,EAAC;IACtBJ,KAAK,CAACgB,KAAK,CAACG,OAAO,EAAE;MACrBG,QAAQ,EAAEtB,KAAK,CAACuB,QAAQ,CAACC,SAAS;MAAEC,SAAS,EAACL;IAC9C,CAAC,CAAC;EACJ,CAAC,MAAK,IAAGhB,IAAI,KAAG,SAAS,EAAC;IACxBJ,KAAK,CAAC0B,OAAO,CAACP,OAAO,EAAE;MACvBG,QAAQ,EAAEtB,KAAK,CAACuB,QAAQ,CAACC,SAAS;MAAEC,SAAS,EAACL;IAC9C,CAAC,CAAC;EACJ,CAAC,MAAI;IACHpB,KAAK,CAAC2B,IAAI,CAACR,OAAO,EAAE;MACpBG,QAAQ,EAAEtB,KAAK,CAACuB,QAAQ,CAACC,SAAS;MAAEC,SAAS,EAAC;IAC9C,CAAC,CAAC;EACJ;AACJ,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}